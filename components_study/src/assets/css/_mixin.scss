$mainGray: #666666;
$mainRed: #a50034;
$mainRedHover: #9e002d;;
$black: #000;
$white: #fff;
$darkGray: #333333;
$lightGray: #cccccc;

$menuDeepGnbColor : rgba(99,0,27,1);
$menuGnbColor :     rgba(114,2,32,1);
$menuGnbColorA :    rgba(114,2,32,0.5);

// 기본 폰트 사이즈, 다른나라 폰트 들어갈때 줄이기
$base-font-size: 100%;
$en-letter-spacing: normal;

// font-size rem
@mixin font-size($font-size) {
  font-size: $font-size * 0.9px;
}

// clearfix
@mixin clearfix {
	&::after{
		content:'';
		display: block;
		clear: both;
  }
}

// box center
@mixin boxCenter($x, $y, $z) {
   position: absolute;
   left: $x;
   top: $y;
   z-index: $z;

   @if $x==50% and $y==50% {
       transform: translate(-50%, -50%);
   }

   @else if $x==50% {
       transform: translateX(-50%);
   }

   @else if $y==50% {
       transform: translateY(-50%);
   }
}

// box center2
@mixin boxCenter2() {
	position: absolute;
    top: 0;
	bottom: 0;
	margin: auto;
}

// font-weight
@mixin fontWeight($w) {
	font-weight: $w;
 
	@if $w==bold {
		font-weight: 700;
	}

	@else if $w==medium {
		font-weight: 500;
	}
 
	@else if $w==regular {
		font-weight: 400;
	}

	@else if $w==thin {
		font-weight: 100;
	}
 }

// a block
@mixin aBlock($block) {
   display: $block;
   width: 100%;
   height: 100%;
}

// transition
@mixin transition($s){
   transition: all $s;
}

// span base
@mixin spanBase ($display, $width, $height) {
    display: $display;
    width: $width;
	height: $height;
	text-indent: -9999px;
}

// Pseudo class base
@mixin pseudoBase ($display, $width, $height) {
	content:'';
	position: absolute;
    display: $display;
    width: $width;
	height: $height;
}

@mixin displayFlex($dispaly, $justify, $align){
	display: $dispaly;
	justify-content: $justify;
	align-items: $align;
}

// sprite image
@mixin bgImg($p, $s) {
    background-position: $p;
    background-size: $s;
    background-repeat: no-repeat;
    image-rendering: crisp-edges;
    image-rendering: -moz-crisp-edges;
    /* Firefox */
    image-rendering: -o-crisp-edges;
    /* Opera */
    image-rendering: -webkit-optimize-contrast;
    /* Webkit (non-standard naming)*/
    -ms-interpolation-mode: nearest-neighbor;
    /* IE (non-standard property) */
}

// Flexbox display
@mixin flexbox() {
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
}

@mixin inline-flex() {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -moz-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
}

// flex
// <positive-number>, initial, auto, or none
@mixin flex($values) {
    -webkit-box-flex: $values;
    -moz-box-flex: $values;
    -webkit-flex: $values;
    -ms-flex: $values;
    flex: $values;
}

// Flex Flow Direction
// row | row-reverse | column | column-reverse
@mixin flex-direction($direction) {
    -webkit-flex-direction: $direction;
    -moz-flex-direction: $direction;
    -ms-flex-direction: $direction;
    flex-direction: $direction;
}

// Flex Line Wrapping
// nowrap | wrap | wrap-reverse
@mixin flex-wrap($wrap) {
    -webkit-flex-wrap: $wrap;
    -moz-flex-wrap: $wrap;
    -ms-flex-wrap: $wrap;
    flex-wrap: $wrap;
}

// Flex Direction and Wrap
// <flex-direction> || <flex-wrap>
@mixin flex-flow($flow) {
    -webkit-flex-flow: $flow;
    -moz-flex-flow: $flow;
    -ms-flex-flow: $flow;
    flex-flow: $flow;
}

// Display Order
// <integer>
@mixin order($val) {
    -webkit-box-ordinal-group: $val;
    -moz-box-ordinal-group: $val;
    -ms-flex-order: $val;
    -webkit-order: $val;
    order: $val;
}

// Flex grow factor
// <number>
@mixin flex-grow($grow) {
    -webkit-flex-grow: $grow;
    -moz-flex-grow: $grow;
    -ms-flex-grow: $grow;
    flex-grow: $grow;
}

// Flex shrink
// <number>
@mixin flex-shrink($shrink) {
    -webkit-flex-shrink: $shrink;
    -moz-flex-shrink: $shrink;
    -ms-flex-shrink: $shrink;
    flex-shrink: $shrink;
}

// Flex basis
// <width>
@mixin flex-basis($width) {
    -webkit-flex-basis: $width;
    -moz-flex-basis: $width;
    -ms-flex-basis: $width;
    flex-basis: $width;
}

// Axis Alignment
// flex-start | flex-end | center | space-between | space-around
@mixin justify-content($justify) {
    -webkit-justify-content: $justify;
    -moz-justify-content: $justify;
    -ms-justify-content: $justify;
    justify-content: $justify;
    -ms-flex-pack: $justify;
}

// Packing Flex Lines
// flex-start | flex-end | center | space-between | space-around | stretch
@mixin align-content($align) {
    -webkit-align-content: $align;
    -moz-align-content: $align;
    -ms-align-content: $align;
    align-content: $align;
}

// Cross-axis Alignment
// flex-start | flex-end | center | baseline | stretch
@mixin align-items($align) {
    -webkit-align-items: $align;
    -moz-align-items: $align;
    -ms-align-items: $align;
    align-items: $align;
}

// Cross-axis Alignment
// auto | flex-start | flex-end | center | baseline | stretch
@mixin align-self($align) {
    -webkit-align-self: $align;
    -moz-align-self: $align;
    -ms-align-self: $align;
    align-self: $align;
}

$desktop-l-width	: 1400px;
$desktop-l-width2	: 1280px;
$tablet-l-width		: 1024px;
$tablet-s-width		: 768px;
$mob-l-width		: 640px;
$mob-m-width		: 425px;
$mob-s-width		: 375px;

// PC large
@mixin pc-large {
	@media all and (max-width: #{$desktop-l-width}) {
		@content;
	}
}

// PC small
@mixin pc-small {
	@media all and (max-width: #{$desktop-l-width2}) {
		@content;
	}
}

// 태블릿 large
@mixin tab-large {
	@media all and (max-width: #{$tablet-l-width}) {
		@content;
	}
}

// 태블릿 small
@mixin tab-small {
	@media all and (max-width: #{$tablet-s-width}) {
		@content;
	}
}

// 모바일 large
@mixin mob-large {
	@media all and (max-width: #{$mob-l-width}) {
		@content;
	}
}
// 모바일 mid
@mixin mob-mid {
	@media all and (max-width: #{$mob-m-width}) {
		@content;
	}
}
// 모바일 small
@mixin mob-small {
	@media all and (max-width: #{$mob-s-width}) {
		@content;
	}
}

// 모바일 landscape :: 가로모드
@mixin landscape {
    @media only screen and (max-width: 1100px) and (max-height: 480px) {
		@content;
	}
}

